use_r("createArtificalSociety")
library(devtools)
use_r("createArtificalSociety")
document()
document()
?createArtificialSociety
??createArtificialSociety
check()
dplyr::filter()
tidyverse::tibble
use_package("dplyr")
use_package("cluster")
document()
check()
use_package("tibble")
document()
check()
tidyverse::expand_grid
tidyr::expand_grid
tidyr::tibble
use_package("tidyr")
document()
check()
magrittr::%>%
use_package("magrittr")
check()
sessionInfo()
library(installr)
load_all()
library(usethis)
load_all()
library(devtools)
load_all()
load_all()
sample(5)
sample(5) %>% length()
load_all()
check()
check()
check()
document()
document()
document()
document()
document()
check()
document()
document()
document()
check()
load_all()
ev_data <- read_csv("~/Policy/AgentBasedModels/modeldata_allcarbuyers.csv")
ev_data$ID <- 1:dim(ev_data)[1]
society <- survey_ev %>% filter(qev30!=5)  #dimension 924 - all car owners or potential car owners to buy a car in future, do not drive an EV
#dim(society) #924 drivers nor currently driving an ev or potential drivers
#exclude q17bc
society$ID <- 1:dim(society)[1]
social_variables <- c("age","class","gender","region","qc1","qc","qh","qd","qj","qe1a","q16")
filter(questions, code %in% social_variables)
society <- society[,c("ID",social_variables)]
deg <- society$q16
dim(society)
society <- society[,-dim(society)[2]] %>% pivot_longer(-ID,names_to = "code",values_to="answercode")
society <- society %>% inner_join(qanda[,-5])
society <- society[,c(1,2,5)] %>% pivot_wider(values_from = "answer",names_from="code")
society$q16 <- deg
names(society) <- c("ID",social_variables)
names(society)[6:12] <- c("area_type","county","profession","employment_status","education","children","degree")
society <- read_csv("~/Policy/AgentBasedModels/society.csv")
library(tidyverse)
society <- read_csv("~/Policy/AgentBasedModels/society.csv")
society
usethis::use_data(society, society)
document()
check()
dim(society)
names(society)
socity$age %>% unqiue()
soceity$age %>% unqiue()
society$age %>% unqiue()
society$age %>% unique()
document()
check()
document()
use_mit_license("Joe Wheatley")
homophily <- read_csv("~/Policy/AgentBasedModels/homophily.csv")
usethis::use_data(homohily, homophily)
usethis::use_data(homophily, homophily)
homophily
names(society)
document()
check()
load_all()
data("homophily")
rm(homophily)
data("homophily")
homophily
rm(society)
society
rm(society)
society
rm(society)
society
createArtificalSociety(society,homophily)
dim(society)
unclass(society)
society_factor <- unclass(society) %>% as.data.frame()
society_factor1 <- dplyr::filter(society_factor,degree != 0)
society1 <- dplyr::filter(society, degree != 0)
N_society1 <- dim(society1)[1]
zeronodes <- dplyr::filter(society,degree==0)$ID #nodes with no influencers
zeronodes
society_factor1[,2:12]
dist_mat <- cluster::daisy(society_factor1[,2:12], metric ="gower", weights=homophily$weights) %>% as.matrix()
str(society_factor)
society
society_factor <- unclass(society %>% mutate_if(is.character,as.factor)) %>% as.data.frame()
society_factor
society_factor1 <- dplyr::filter(society_factor,degree != 0)
society1 <- dplyr::filter(society, degree != 0)
N_society1 <- dim(society1)[1]
zeronodes <- dplyr::filter(society,degree==0)$ID #nodes with no influencers
society_factor1[,2:12]
society %>% mutate_if(is.character,as.factor)
soc <- society %>% mutate_if(is.character,as.factor)
soc
unclass(soc)
soc
unclass(soc) %>% as.data.frame()
unclass(soc) %>% as_tibble()
dist_mat <- cluster::daisy(society_factor1[,2:12], metric ="gower", weights=homophily$weights) %>% as.matrix()
#create a random homophilous social network
#social distance measure=gower distance
#nu gives the social distance decay exponentlarger mu higher assortativity
#agents with degree zero remain degree zero but there may be additional nodes with degree zero
society_factor <- unclass(society %>% mutate_if(is.character,as.factor)) %>% as.data.frame()
society_factor1 <- dplyr::filter(society_factor,degree != 0)
society1 <- dplyr::filter(society, degree != 0)
N_society1 <- dim(society1)[1]
zeronodes <- dplyr::filter(society,degree==0)$ID #nodes with no influencers
dist_mat <- cluster::daisy(society_factor1[,2:12], metric ="gower", weights=homophily$weights) %>% as.matrix()
0.03/277.8*1000
0.03*10^6/(277.8*10^3)
0.03*10^6/(277.8*10^3)
#create a random homophilous social network
#social distance measure=gower distance
#nu gives the social distance decay exponentlarger mu higher assortativity
#agents with degree zero remain degree zero but there may be additional nodes with degree zero
society_factor <- unclass(society %>% dplyr::mutate_if(is.character,as.factor)) %>% as.data.frame()
library(tidyverse)
library(devtools)
load_all()
createArtificalSociety(society,homophily,4.5)
install()
